#include <Tone.h>
#include "Song.h"

const byte speakerPin = 9;
const byte switchAPin = 2;
const byte switchBPin = 3;

Tone tone1;
Tone tone2;

#pragma region On Eagles's Wings
// On Eagles's Wings
const unsigned int eagleNotes[] PROGMEM =
{
	NOTE_REST, NOTE_CS5, NOTE_D5, NOTE_E5, NOTE_A5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_B4, NOTE_CS5, NOTE_CS5, NOTE_D5, NOTE_E5, NOTE_A5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_A4, NOTE_CS5, NOTE_D5, NOTE_E5, NOTE_A5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_B4, NOTE_CS5, NOTE_CS5, NOTE_D5, NOTE_E5, NOTE_A5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_A4, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_A4, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_A4, NOTE_CS5, NOTE_D5, NOTE_E5, NOTE_CS5, NOTE_A5, NOTE_GS5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_B4, NOTE_CS5, NOTE_CS5, NOTE_D5, NOTE_E5, NOTE_A5, NOTE_GS5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_A4, NOTE_CS5, NOTE_D5, NOTE_E5, NOTE_A5, NOTE_GS5, NOTE_FS5, NOTE_GS5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_D5, NOTE_CS5, NOTE_CS5, NOTE_D5, NOTE_E5, NOTE_A5, NOTE_GS5, NOTE_FS5, NOTE_GS5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_A4, NOTE_E5, NOTE_D5, NOTE_E5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_E5, NOTE_A5, NOTE_GS5, NOTE_FS5, NOTE_GS5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_A4, NOTE_E5, NOTE_D5, NOTE_E5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_E5, NOTE_D5, NOTE_E5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_A4, NOTE_E5, NOTE_D5, NOTE_E5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_D5, NOTE_E5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_E5, NOTE_D5, NOTE_E5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_A4, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_A4
};

const unsigned int eagleTimes[] PROGMEM =
{
	1000, 250, 250, 1000, 500, 1500, 750, 250, 500, 500, 500, 250, 250, 1000, 500, 1500, 750, 250, 500, 1000, 250, 250, 1000, 500, 1500, 750, 250, 500, 500, 500, 250, 250, 1000, 500, 1500, 750, 250, 500, 1500, 1000, 500, 500, 1000, 750, 250, 500, 500, 250, 250, 500, 1000, 500, 500, 1000, 750, 250, 500, 1500, 1000, 500, 500, 1000, 750, 250, 500, 500, 250, 250, 500, 1000, 500, 500, 1000, 750, 250, 500, 1000, 250, 250, 500, 500, 250, 250, 1500, 750, 250, 500, 500, 500, 250, 250, 500, 750, 250, 1500, 750, 250, 500, 1000, 250, 250, 500, 250, 250, 250, 250, 1500, 750, 250, 500, 500, 500, 250, 250, 500, 250, 250, 250, 250, 1500, 750, 250, 500, 1500, 500, 750, 250, 500, 1000, 750, 250, 500, 500, 250, 250, 500, 500, 250, 250, 250, 250, 1500, 750, 250, 500, 1500, 500, 750, 250, 500, 1000, 750, 250, 500, 500, 250, 250, 500, 500, 750, 250, 500, 1000, 750, 250, 500, 1500, 500, 750, 250, 500, 1000, 750, 250, 500, 250, 125, 125, 250, 250, 500, 500, 750, 250, 500, 1000, 750, 250, 500, 1500, 750, 250, 500, 1500
};

const unsigned int eagleLength PROGMEM = sizeof(eagleNotes) / sizeof(unsigned int);

const struct Song eagleSong PROGMEM =
{
	eagleNotes,
	eagleTimes,
	NULL,
	NULL,
	eagleLength
};
#pragma endregion

#pragma region Bach
// Bach
const unsigned int bachNotes[] PROGMEM =
{
	NOTE_G5, NOTE_BF5, NOTE_G5, NOTE_D5, NOTE_G5, NOTE_D5, NOTE_BF4, NOTE_D5, NOTE_BF4, NOTE_G4, NOTE_BF4, NOTE_G4, NOTE_D4, NOTE_G4, NOTE_D4, NOTE_BF3, NOTE_D4, NOTE_BF3, NOTE_G3, NOTE_BF3, NOTE_D4, NOTE_G4, NOTE_BF4, NOTE_D5, NOTE_G5, NOTE_D5, NOTE_C5, NOTE_BF4, NOTE_A4, NOTE_G4, NOTE_FS4, NOTE_D4, NOTE_FS4, NOTE_A4, NOTE_D5, NOTE_FS5, NOTE_A5, NOTE_EF5, NOTE_D5, NOTE_C5, NOTE_BF4, NOTE_A4, NOTE_G4, NOTE_D4, NOTE_G4, NOTE_BF4, NOTE_D5, NOTE_G5, NOTE_BF5, NOTE_G5, NOTE_EF5, NOTE_C5, NOTE_EF5, NOTE_G5, NOTE_A5, NOTE_F5, NOTE_D5, NOTE_BF4, NOTE_D5, NOTE_F5, NOTE_G5, NOTE_EF5, NOTE_C5, NOTE_A4, NOTE_C5, NOTE_EF5, NOTE_D4, NOTE_G5, NOTE_FS5, NOTE_G5, NOTE_A5, NOTE_C5, NOTE_G4, NOTE_C5, NOTE_BF4, NOTE_C5, NOTE_D5, NOTE_F4, NOTE_C4, NOTE_F5, NOTE_E5, NOTE_F5, NOTE_G5, NOTE_BF4, NOTE_F4, NOTE_BF4, NOTE_A4, NOTE_BF4, NOTE_C5, NOTE_EF4, NOTE_BF3, NOTE_EF5, NOTE_D5, NOTE_EF5, NOTE_F5, NOTE_AF4, NOTE_EF4, NOTE_BF3, NOTE_EF4, NOTE_G4, NOTE_EF4, NOTE_G4, NOTE_C5, NOTE_G4, NOTE_C5, NOTE_EF5, NOTE_C5, NOTE_EF5, NOTE_F4, NOTE_C4, NOTE_F4, NOTE_A4, NOTE_F4, NOTE_A4, NOTE_D5, NOTE_A4, NOTE_D5, NOTE_F5, NOTE_D5, NOTE_F5, NOTE_G4, NOTE_D4, NOTE_G4, NOTE_BF4, NOTE_G4, NOTE_BF4, NOTE_EF5, NOTE_BF4, NOTE_EF5, NOTE_G5, NOTE_EF5, NOTE_G5, NOTE_A4, NOTE_F4, NOTE_A4, NOTE_C5, NOTE_A4, NOTE_C5, NOTE_F5, NOTE_C5, NOTE_F5, NOTE_A5, NOTE_F5, NOTE_A5, NOTE_BF4, NOTE_C5, NOTE_D5, NOTE_BF5, NOTE_A5, NOTE_BF5, NOTE_C5, NOTE_D5, NOTE_EF5, NOTE_BF5, NOTE_A5, NOTE_BF5, NOTE_D5, NOTE_EF5, NOTE_F5, NOTE_BF5, NOTE_A5, NOTE_BF5, NOTE_EF5, NOTE_F5, NOTE_G5, NOTE_BF5, NOTE_A5, NOTE_BF5, NOTE_A4, NOTE_C5, NOTE_EF5, NOTE_G5, NOTE_F5, NOTE_EF5, NOTE_D5, NOTE_BF4, NOTE_EF5, NOTE_BF4, NOTE_F5, NOTE_AF4, NOTE_G4, NOTE_A4, NOTE_BF4, NOTE_D4, NOTE_C4, NOTE_A4, NOTE_BF3, NOTE_D4, NOTE_C4, NOTE_BF3, NOTE_A3, NOTE_G3, NOTE_A3, NOTE_G4, NOTE_FS4, NOTE_E4, NOTE_D4, NOTE_C5, NOTE_BF4, NOTE_A4, NOTE_G4, NOTE_F5, NOTE_E5, NOTE_D5, NOTE_CS5, NOTE_BF5, NOTE_A5, NOTE_G5, NOTE_F5, NOTE_E5, NOTE_F5, NOTE_D5, NOTE_G5, NOTE_D5, NOTE_A5, NOTE_C5, NOTE_BF4, NOTE_A5, NOTE_G5, NOTE_F5, NOTE_E5, NOTE_D5, NOTE_E5, NOTE_C5, NOTE_F5, NOTE_C5, NOTE_G5, NOTE_BF4, NOTE_A4, NOTE_G5, NOTE_F5, NOTE_E5, NOTE_D5, NOTE_CS5, NOTE_D5, NOTE_BF4, NOTE_E5, NOTE_BF4, NOTE_F5, NOTE_A4, NOTE_G4, NOTE_F5, NOTE_E5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_A4, NOTE_D5, NOTE_A4, NOTE_E5, NOTE_G4, NOTE_F4, NOTE_D5, NOTE_BF4, NOTE_G4, NOTE_E4, NOTE_C5, NOTE_D4, NOTE_BF4, NOTE_G4, NOTE_E4, NOTE_C4, NOTE_A4, NOTE_BF3, NOTE_G4, NOTE_E4, NOTE_CS4, NOTE_A3, NOTE_F4, NOTE_G3, NOTE_F4, NOTE_E4, NOTE_D4, NOTE_CS4, NOTE_B3, NOTE_A3, NOTE_D4, NOTE_CS4, NOTE_E4, NOTE_D4, NOTE_F4, NOTE_A3, NOTE_E4, NOTE_D4, NOTE_F4, NOTE_E4, NOTE_G4, NOTE_A3, NOTE_F4, NOTE_E4, NOTE_G4, NOTE_F4, NOTE_A4, NOTE_BF3, NOTE_G4, NOTE_FS4, NOTE_A4, NOTE_G4, NOTE_BF4, NOTE_CS4, NOTE_BF4, NOTE_A4, NOTE_G4, NOTE_F4, NOTE_E4, NOTE_F4, NOTE_D4, NOTE_F4, NOTE_A4, NOTE_D5, NOTE_F5, NOTE_A5, NOTE_D5, NOTE_A4, NOTE_CS5, NOTE_D5, NOTE_D4, NOTE_A3, NOTE_D4, NOTE_FS4, NOTE_D4, NOTE_FS4, NOTE_A4, NOTE_FS4, NOTE_A4, NOTE_D5, NOTE_A4, NOTE_D5, NOTE_FS5, NOTE_D5, NOTE_FS5, NOTE_A5, NOTE_FS5, NOTE_A5, NOTE_D6, NOTE_A5, NOTE_FS5, NOTE_D5, NOTE_A4, NOTE_FS4, NOTE_D4, NOTE_E4, NOTE_FS4, NOTE_G4, NOTE_A4, NOTE_BF4, NOTE_C5, NOTE_EF5, NOTE_C5, NOTE_A4, NOTE_C5, NOTE_A4, NOTE_FS4, NOTE_D4, NOTE_FS4, NOTE_A4, NOTE_D5, NOTE_C5, NOTE_BF4, NOTE_D5, NOTE_BF4, NOTE_G4, NOTE_D4, NOTE_BF3, NOTE_G3, NOTE_A3, NOTE_BF3, NOTE_C4, NOTE_D4, NOTE_EF4, NOTE_F4, NOTE_AF4, NOTE_F4, NOTE_D4, NOTE_F4, NOTE_D4, NOTE_B3, NOTE_G3, NOTE_B3, NOTE_D4, NOTE_G4, NOTE_F4, NOTE_EF4, NOTE_C4, NOTE_EF4, NOTE_G4, NOTE_C5, NOTE_D5, NOTE_EF5, NOTE_C5, NOTE_AF4, NOTE_F4, NOTE_AF4, NOTE_C5, NOTE_D5, NOTE_BF4, NOTE_G4, NOTE_EF4, NOTE_G4, NOTE_BF4, NOTE_C5, NOTE_AF4, NOTE_F4, NOTE_D4, NOTE_F4, NOTE_AF4, NOTE_G3, NOTE_C5, NOTE_B4, NOTE_C5, NOTE_D5, NOTE_F4, NOTE_C4, NOTE_F5, NOTE_EF5, NOTE_F5, NOTE_G5, NOTE_BF4, NOTE_F4, NOTE_BF4, NOTE_AF4, NOTE_BF4, NOTE_C5, NOTE_EF4, NOTE_BF3, NOTE_EF5, NOTE_D5, NOTE_EF5, NOTE_F5, NOTE_AF4, NOTE_EF4, NOTE_AF4, NOTE_G4, NOTE_AF4, NOTE_BF4, NOTE_DF4, NOTE_AF3, NOTE_C4, NOTE_F4, NOTE_AF4, NOTE_G4, NOTE_F4, NOTE_B3, NOTE_D4, NOTE_F4, NOTE_AF4, NOTE_G4, NOTE_F4, NOTE_C4, NOTE_E4, NOTE_F4, NOTE_AF4, NOTE_G4, NOTE_F4, NOTE_D4, NOTE_F4, NOTE_B4, NOTE_C5, NOTE_D5, NOTE_F4, NOTE_EF4, NOTE_G4, NOTE_C5, NOTE_D5, NOTE_EF5, NOTE_C5, NOTE_AF5, NOTE_G5, NOTE_F5, NOTE_EF5, NOTE_D5, NOTE_C5, NOTE_G5, NOTE_D5, NOTE_EF5, NOTE_C5, NOTE_G4, NOTE_B4, NOTE_C4, NOTE_F4, NOTE_EF4, NOTE_D4, NOTE_C4, NOTE_BF3, NOTE_A3, NOTE_C4, NOTE_F4, NOTE_C4, NOTE_F4, NOTE_A4, NOTE_F4, NOTE_A4, NOTE_C5, NOTE_A4, NOTE_C5, NOTE_EF5, NOTE_C5, NOTE_EF5, NOTE_A5, NOTE_G5, NOTE_F5, NOTE_EF5, NOTE_D5, NOTE_C5, NOTE_BF4, NOTE_C5, NOTE_D5, NOTE_E5, NOTE_FS5, NOTE_A5, NOTE_C6, NOTE_A5, NOTE_FS5, NOTE_A5, NOTE_FS5, NOTE_C5, NOTE_FS5, NOTE_C5, NOTE_A4, NOTE_C5, NOTE_A4, NOTE_FS4, NOTE_A4, NOTE_FS4, NOTE_D4, NOTE_C5, NOTE_BF4, NOTE_G4, NOTE_BF4, NOTE_G4, NOTE_E4, NOTE_D5, NOTE_C5, NOTE_A4, NOTE_C5, NOTE_A4, NOTE_FS4, NOTE_EF5, NOTE_D5, NOTE_BF4, NOTE_D5, NOTE_BF4, NOTE_G4, NOTE_F5, NOTE_EF5, NOTE_C5, NOTE_EF5, NOTE_C5, NOTE_A4, NOTE_G5, NOTE_FS5, NOTE_D5, NOTE_E5, NOTE_FS5, NOTE_G5, NOTE_A5, NOTE_BF5, NOTE_D5, NOTE_G5, NOTE_BF5, NOTE_C5, NOTE_EF5, NOTE_A5, NOTE_F5, NOTE_D5, NOTE_BF4, NOTE_D5, NOTE_F5, NOTE_G5, NOTE_BF4, NOTE_EF5, NOTE_G5, NOTE_A4, NOTE_C5, NOTE_F5, NOTE_D5, NOTE_BF4, NOTE_G4, NOTE_BF4, NOTE_D5, NOTE_EF5, NOTE_G4, NOTE_C5, NOTE_EF5, NOTE_F4, NOTE_A4, NOTE_D5, NOTE_BF4, NOTE_G4, NOTE_E4, NOTE_G4, NOTE_BF4, NOTE_C5, NOTE_A4, NOTE_BF4, NOTE_G4, NOTE_FS4, NOTE_A4, NOTE_D4, NOTE_E4, NOTE_FS4, NOTE_G4, NOTE_A4, NOTE_BF4, NOTE_C5, NOTE_EF5, NOTE_D5, NOTE_G5, NOTE_FS5, NOTE_BF5, NOTE_A5, NOTE_G5, NOTE_FS5, NOTE_E5, NOTE_D5, NOTE_C5, NOTE_BF4, NOTE_EF5, NOTE_D5, NOTE_BF4, NOTE_C5, NOTE_A4, NOTE_F4, NOTE_D5, NOTE_C5, NOTE_A4, NOTE_BF4, NOTE_G4, NOTE_EF4, NOTE_C5, NOTE_BF4, NOTE_G4, NOTE_A4, NOTE_FS4, NOTE_D4, NOTE_BF4, NOTE_A4, NOTE_FS4, NOTE_G4, NOTE_EF4, NOTE_C4, NOTE_A4, NOTE_G4, NOTE_E4, NOTE_FS4, NOTE_D4, NOTE_BF3, NOTE_D5, NOTE_C5, NOTE_BF4, NOTE_A4, NOTE_G4, NOTE_EF5, NOTE_D5, NOTE_C5, NOTE_BF5, NOTE_A5, NOTE_G5, NOTE_FS5, NOTE_G5, NOTE_A5, NOTE_D5, NOTE_EF5, NOTE_C5, NOTE_F4, NOTE_B4, NOTE_D5, NOTE_AF4, NOTE_G4, NOTE_F4, NOTE_E4, NOTE_G4, NOTE_C5, NOTE_E5, NOTE_G5, NOTE_BF4, NOTE_EF4, NOTE_A4, NOTE_C5, NOTE_G4, NOTE_F4, NOTE_EF4, NOTE_D4, NOTE_F4, NOTE_BF4, NOTE_D5, NOTE_F5, NOTE_AF4, NOTE_G4, NOTE_EF5, NOTE_BF4, NOTE_G4, NOTE_EF4, NOTE_D4, NOTE_C4, NOTE_EF5, NOTE_C5, NOTE_BF4, NOTE_A4, NOTE_G4, NOTE_FS4, NOTE_D5, NOTE_A4, NOTE_FS4, NOTE_D4, NOTE_C4, NOTE_BF3, NOTE_D5, NOTE_BF4, NOTE_A4, NOTE_G4, NOTE_F4, NOTE_E4, NOTE_C4, NOTE_G4, NOTE_BF3, NOTE_A3, NOTE_G4, NOTE_FS4, NOTE_D4, NOTE_A4, NOTE_C4, NOTE_BF3, NOTE_A4, NOTE_G4, NOTE_EF4, NOTE_BF4, NOTE_D4, NOTE_C4, NOTE_BF4, NOTE_A4, NOTE_F4, NOTE_C5, NOTE_EF4, NOTE_D4, NOTE_C5, NOTE_BF4, NOTE_G4, NOTE_D5, NOTE_F4, NOTE_E4, NOTE_D5, NOTE_C5, NOTE_A4, NOTE_EF5, NOTE_G4, NOTE_FS4, NOTE_EF5, NOTE_D5, NOTE_BF4, NOTE_G5, NOTE_BF4, NOTE_A4, NOTE_C5, NOTE_BF4, NOTE_G4, NOTE_FS4, NOTE_A4, NOTE_D4, NOTE_C4, NOTE_BF3, NOTE_G4, NOTE_FS4, NOTE_A4, NOTE_G4, NOTE_BF4, NOTE_C4, NOTE_A4, NOTE_G4, NOTE_BF4, NOTE_A4, NOTE_C5, NOTE_D4, NOTE_BF4, NOTE_A4, NOTE_C5, NOTE_BF4, NOTE_D5, NOTE_EF4, NOTE_C5, NOTE_B4, NOTE_D5, NOTE_C5, NOTE_EF5, NOTE_FS4, NOTE_EF5, NOTE_D5, NOTE_C5, NOTE_BF4, NOTE_A4, NOTE_BF4, NOTE_D5, NOTE_G5, NOTE_BF5, NOTE_G5, NOTE_D5, NOTE_BF4, NOTE_G4, NOTE_D4, NOTE_FS5, NOTE_G5
};

const unsigned int bachTimes[] PROGMEM =
{
	
};

const unsigned int bachLength PROGMEM = sizeof(bachNotes) / sizeof(unsigned int);

const struct Song bachSong PROGMEM =
{
	bachNotes,
	bachTimes,
	NULL,
	NULL,
	bachLength
};
#pragma endregion

#pragma region Undertale
// Undertale
const unsigned int undertale1Notes[] PROGMEM =
{
	NOTE_REST, NOTE_C4, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_EF5, NOTE_C5, NOTE_B4, NOTE_C5, NOTE_REST, NOTE_D5, NOTE_C5, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_EF4, NOTE_REST, NOTE_C4, NOTE_REST, NOTE_D4, NOTE_EF4, NOTE_REST, NOTE_FS4, NOTE_G4, NOTE_REST, NOTE_EF4, NOTE_REST, NOTE_C4, NOTE_REST, NOTE_A3, NOTE_REST, NOTE_B3, NOTE_C4, NOTE_REST, NOTE_D4, NOTE_C4, NOTE_REST, NOTE_G3, NOTE_REST, NOTE_EF3, NOTE_REST, NOTE_REST, NOTE_REST, NOTE_C4, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_EF5, NOTE_G5, NOTE_A5, NOTE_BF5, NOTE_A5, NOTE_REST, NOTE_G5, NOTE_REST, NOTE_A5, NOTE_BF5, NOTE_REST, NOTE_G5, NOTE_REST, NOTE_EF5, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_B4, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_D5, NOTE_EF5, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_EF4, NOTE_REST, NOTE_B4, NOTE_A4, NOTE_REST, NOTE_B4, NOTE_A4, NOTE_B4, NOTE_A4, NOTE_B4, NOTE_C5, NOTE_REST, NOTE_REST, NOTE_REST, NOTE_EF4, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_EF5, NOTE_AF5, NOTE_G5, NOTE_FS5, NOTE_REST, NOTE_G5, NOTE_C6, NOTE_REST, NOTE_G5, NOTE_REST, NOTE_EF5, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_D5, NOTE_EF5, NOTE_REST, NOTE_F5, NOTE_G5, NOTE_REST, NOTE_EF5, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_B4, NOTE_A4, NOTE_REST, NOTE_D5, NOTE_C5, NOTE_REST, NOTE_REST, NOTE_REST, NOTE_C4, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_EF5, NOTE_G5, NOTE_A5, NOTE_BF5, NOTE_A5, NOTE_REST, NOTE_G5, NOTE_REST, NOTE_A5, NOTE_BF5, NOTE_REST, NOTE_G5, NOTE_REST, NOTE_EF5, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_B4, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_D5, NOTE_EF5, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_EF4, NOTE_REST, NOTE_B4, NOTE_A4, NOTE_REST, NOTE_B4, NOTE_A4, NOTE_B4, NOTE_A4, NOTE_B4, NOTE_C5, NOTE_REST, NOTE_REST, NOTE_REST, NOTE_F4, NOTE_REST, NOTE_AF4, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_F5, NOTE_C5, NOTE_B4, NOTE_C5, NOTE_REST, NOTE_D5, NOTE_C5, NOTE_D5, NOTE_B4, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_B4, NOTE_REST, NOTE_D5, NOTE_REST, NOTE_EF5, NOTE_F5, NOTE_EF5, NOTE_D5, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_C6, NOTE_BF5, NOTE_REST, NOTE_AF5, NOTE_REST, NOTE_G5, NOTE_AF5, NOTE_G5, NOTE_F5, NOTE_REST, NOTE_AF5, NOTE_REST, NOTE_G5, NOTE_REST, NOTE_REST, NOTE_F4, NOTE_REST, NOTE_AF4, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_F5, NOTE_C5, NOTE_B4, NOTE_C5, NOTE_REST, NOTE_D5, NOTE_C5, NOTE_D5, NOTE_B4, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_B4, NOTE_REST, NOTE_D5, NOTE_REST, NOTE_EF5, NOTE_F5, NOTE_EF5, NOTE_D5, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_C6, NOTE_C6, NOTE_D6, NOTE_REST, NOTE_EF6, NOTE_REST, NOTE_D6, NOTE_REST, NOTE_C6, NOTE_REST, NOTE_B5, NOTE_REST, NOTE_AF5, NOTE_REST, NOTE_G5, NOTE_AF5, NOTE_G5, NOTE_REST, NOTE_REST, NOTE_REST, NOTE_F4, NOTE_REST, NOTE_AF4, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_F5, NOTE_C5, NOTE_B4, NOTE_C5, NOTE_REST, NOTE_D5, NOTE_C5, NOTE_D5, NOTE_B4, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_B4, NOTE_REST, NOTE_D5, NOTE_REST, NOTE_EF5, NOTE_F5, NOTE_EF5, NOTE_D5, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_C6, NOTE_BF5, NOTE_REST, NOTE_AF5, NOTE_REST, NOTE_G5, NOTE_AF5, NOTE_G5, NOTE_F5, NOTE_REST, NOTE_AF5, NOTE_REST, NOTE_G5, NOTE_REST, NOTE_REST, NOTE_F4, NOTE_REST, NOTE_AF4, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_F5, NOTE_G5, NOTE_AF5, NOTE_REST, NOTE_G5, NOTE_REST, NOTE_F5, NOTE_REST, NOTE_D5, NOTE_B4, NOTE_D5, NOTE_EF5, NOTE_D5, NOTE_C5, NOTE_B4, NOTE_C5, NOTE_REST, NOTE_D5, NOTE_REST, NOTE_EF5, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_B4, NOTE_C5, NOTE_D5, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_C6, NOTE_REST
};

const unsigned int undertale1Times[] PROGMEM =
{
	200, 100, 100, 100, 100, 100, 100, 400, 400, 200, 100, 100, 400, 100, 100, 100, 100, 100, 100, 100, 100, 200, 100, 100, 400, 100, 100, 100, 100, 100, 100, 100, 100, 200, 100, 100, 400, 100, 100, 100, 100, 100, 100, 200, 200, 100, 100, 100, 100, 100, 100, 400, 50, 50, 300, 100, 100, 100, 100, 400, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 400, 100, 100, 100, 100, 100, 100, 100, 100, 200, 100, 100, 50, 50, 50, 50, 200, 200, 200, 400, 200, 100, 100, 100, 100, 100, 100, 400, 400, 200, 100, 100, 400, 100, 100, 100, 100, 100, 100, 100, 100, 200, 100, 100, 400, 100, 100, 100, 100, 100, 100, 100, 100, 200, 100, 100, 400, 200, 200, 400, 200, 100, 100, 100, 100, 100, 100, 400, 50, 50, 300, 100, 100, 100, 100, 400, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 400, 100, 100, 100, 100, 100, 100, 100, 100, 200, 100, 100, 50, 50, 50, 50, 200, 200, 200, 400, 200, 100, 100, 100, 100, 100, 100, 400, 400, 200, 100, 100, 50, 50, 300, 100, 100, 100, 100, 100, 100, 100, 100, 300, 50, 50, 100, 100, 100, 100, 400, 100, 100, 100, 100, 300, 50, 50, 100, 100, 100, 100, 400, 400, 200, 100, 100, 100, 100, 100, 100, 400, 400, 200, 100, 100, 50, 50, 300, 100, 100, 100, 100, 100, 100, 100, 100, 300, 50, 50, 100, 100, 100, 100, 300, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 50, 50, 300, 100, 200, 200, 100, 100, 100, 100, 100, 100, 400, 400, 200, 100, 100, 50, 50, 300, 100, 100, 100, 100, 100, 100, 100, 100, 300, 50, 50, 100, 100, 100, 100, 400, 100, 100, 100, 100, 300, 50, 50, 100, 100, 100, 100, 400, 400, 200, 100, 100, 100, 100, 100, 100, 400, 50, 300, 50, 100, 100, 100, 100, 400, 400, 50, 150, 200, 200, 200, 100, 100, 100, 100, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200
};

const unsigned int undertale2Notes[] PROGMEM =
{
	NOTE_REST, NOTE_REST, NOTE_REST, NOTE_REST, NOTE_REST, NOTE_REST, NOTE_REST, NOTE_REST, NOTE_REST, NOTE_EF4, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_B4, NOTE_C5, NOTE_B4, NOTE_C5, NOTE_REST, NOTE_D5, NOTE_G5, NOTE_REST, NOTE_EF5, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_G4, NOTE_C5, NOTE_REST, NOTE_B4, NOTE_C5, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_EF4, NOTE_REST, NOTE_C4, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_B4, NOTE_C5, NOTE_REST, NOTE_REST, NOTE_C5, NOTE_EF5, NOTE_F5, NOTE_G5, NOTE_FS5, NOTE_REST, NOTE_EF5, NOTE_REST, NOTE_FS5, NOTE_G5, NOTE_REST, NOTE_EF5, NOTE_REST, NOTE_C5, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_EF4, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_B4, NOTE_C5, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_EF4, NOTE_REST, NOTE_C4, NOTE_REST, NOTE_B3, NOTE_REST, NOTE_G4, NOTE_C4, NOTE_REST, NOTE_F3, NOTE_AF3, NOTE_REST, NOTE_F3, NOTE_AF3, NOTE_REST, NOTE_F3, NOTE_AF3, NOTE_REST, NOTE_F3, NOTE_AF3, NOTE_REST, NOTE_G3, NOTE_B3, NOTE_REST, NOTE_G3, NOTE_B3, NOTE_REST, NOTE_G3, NOTE_B3, NOTE_REST, NOTE_G3, NOTE_B3, NOTE_REST, NOTE_AF3, NOTE_C4, NOTE_REST, NOTE_AF3, NOTE_C4, NOTE_REST, NOTE_AF3, NOTE_C4, NOTE_REST, NOTE_AF3, NOTE_C4, NOTE_REST, NOTE_EF4, NOTE_G4, NOTE_REST, NOTE_EF4, NOTE_G4, NOTE_REST, NOTE_EF4, NOTE_REST, NOTE_D4, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_D4, NOTE_REST, NOTE_F3, NOTE_AF3, NOTE_REST, NOTE_F3, NOTE_AF3, NOTE_REST, NOTE_F3, NOTE_AF3, NOTE_REST, NOTE_F3, NOTE_AF3, NOTE_REST, NOTE_G3, NOTE_B3, NOTE_REST, NOTE_G3, NOTE_B3, NOTE_REST, NOTE_G3, NOTE_B3, NOTE_REST, NOTE_G3, NOTE_B3, NOTE_REST, NOTE_AF3, NOTE_C4, NOTE_REST, NOTE_AF3, NOTE_C4, NOTE_REST, NOTE_AF3, NOTE_C4, NOTE_REST, NOTE_AF3, NOTE_C4, NOTE_REST, NOTE_G3, NOTE_B3, NOTE_REST, NOTE_G3, NOTE_B3, NOTE_REST, NOTE_F4, NOTE_G4, NOTE_REST, NOTE_F4, NOTE_REST, NOTE_EF4, NOTE_REST, NOTE_D4, NOTE_REST, NOTE_F3, NOTE_AF3, NOTE_REST, NOTE_F3, NOTE_AF3, NOTE_REST, NOTE_F3, NOTE_AF3, NOTE_REST, NOTE_F3, NOTE_AF3, NOTE_REST, NOTE_G3, NOTE_B3, NOTE_REST, NOTE_G3, NOTE_B3, NOTE_REST, NOTE_G3, NOTE_B3, NOTE_REST, NOTE_G3, NOTE_B3, NOTE_REST, NOTE_AF3, NOTE_C4, NOTE_REST, NOTE_AF3, NOTE_C4, NOTE_REST, NOTE_AF3, NOTE_C4, NOTE_REST, NOTE_AF3, NOTE_C4, NOTE_REST, NOTE_EF4, NOTE_G4, NOTE_REST, NOTE_EF4, NOTE_G4, NOTE_REST, NOTE_EF4, NOTE_REST, NOTE_D4, NOTE_REST, NOTE_G4, NOTE_REST, NOTE_D4, NOTE_REST, NOTE_F3, NOTE_REST, NOTE_AF3, NOTE_REST, NOTE_F3, NOTE_REST, NOTE_AF3, NOTE_REST, NOTE_F3, NOTE_REST, NOTE_AF3, NOTE_REST, NOTE_F3, NOTE_REST, NOTE_AF3, NOTE_REST, NOTE_G3, NOTE_REST, NOTE_B3, NOTE_REST, NOTE_G3, NOTE_REST, NOTE_B3, NOTE_REST, NOTE_G3, NOTE_REST, NOTE_B3, NOTE_REST, NOTE_G3, NOTE_REST, NOTE_B3, NOTE_REST, NOTE_AF3, NOTE_REST, NOTE_C4, NOTE_REST, NOTE_AF3, NOTE_REST, NOTE_C4, NOTE_REST, NOTE_AF3, NOTE_REST, NOTE_C4, NOTE_REST, NOTE_AF3, NOTE_REST, NOTE_C4, NOTE_REST, NOTE_G3, NOTE_REST, NOTE_B3, NOTE_REST, NOTE_C4, NOTE_REST
};

const unsigned int undertale2Times[] PROGMEM =
{
	2400, 2400, 2400, 2400, 2400, 2400, 2400, 2400, 600, 150, 150, 150, 150, 600, 600, 300, 150, 150, 600, 150, 150, 150, 150, 150, 150, 150, 150, 300, 150, 150, 600, 150, 150, 150, 150, 150, 150, 150, 150, 300, 300, 600, 300, 900, 1200, 600, 75, 75, 450, 150, 150, 150, 150, 600, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 600, 150, 150, 150, 150, 150, 150, 150, 150, 300, 300, 600, 600, 600, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 75, 75, 150, 150, 150, 150, 150, 150, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 300, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 300, 300, 300, 300, 300, 900
};

const unsigned int undertaleLength PROGMEM = sizeof(undertale1Notes) > sizeof(undertale2Notes) ? sizeof(undertale1Notes) / sizeof(unsigned int) : sizeof(undertale2Notes) / sizeof(unsigned int);

const struct Song undertaleSong PROGMEM =
{
	undertale1Notes,
	undertale1Times,
	undertale2Notes,
	undertale2Times,
	undertaleLength
};
#pragma endregion

#pragma region Nyan Cat
// Nyan Cat
const unsigned int nyanCat1Notes[] PROGMEM =
{
	NOTE_DS6, NOTE_E6, NOTE_FS6, NOTE_REST, NOTE_B6, NOTE_E6, NOTE_DS6, NOTE_E6, NOTE_FS6, NOTE_B6, NOTE_DS7, NOTE_E7, NOTE_DS7, NOTE_AS6, NOTE_B6, NOTE_REST, NOTE_FS6, NOTE_REST, NOTE_DS6, NOTE_E6, NOTE_FS6, NOTE_REST, NOTE_B6, NOTE_CS7, NOTE_AS6, NOTE_B6, NOTE_CS7, NOTE_E7, NOTE_DS7, NOTE_E7, NOTE_CS7, NOTE_FS5, NOTE_GS5, NOTE_C5, NOTE_DS5, NOTE_CS5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_FS5, NOTE_GS5, NOTE_DS5, NOTE_FS5, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_DS5, NOTE_FS5, NOTE_GS5, NOTE_DS5, NOTE_FS5, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_C5, NOTE_DS5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_FS5, NOTE_CS5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_FS5, NOTE_GS5, NOTE_C5, NOTE_DS5, NOTE_CS5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_FS5, NOTE_GS5, NOTE_DS5, NOTE_FS5, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_DS5, NOTE_FS5, NOTE_GS5, NOTE_DS5, NOTE_FS5, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_C5, NOTE_DS5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_FS5, NOTE_CS5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_B4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_E5, NOTE_DS5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_FS4, NOTE_E5, NOTE_DS5, NOTE_CS5, NOTE_B4, NOTE_E4, NOTE_DS4, NOTE_E4, NOTE_FS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_FS4, NOTE_B4, NOTE_B4, NOTE_AS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_E5, NOTE_DS5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_AS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_E5, NOTE_DS5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_FS4, NOTE_E5, NOTE_DS5, NOTE_CS5, NOTE_B4, NOTE_E4, NOTE_DS4, NOTE_E4, NOTE_FS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_FS4, NOTE_B4, NOTE_B4, NOTE_AS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_E5, NOTE_DS5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_B4
};

const unsigned int nyanCat1Times[] PROGMEM =
{
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 107, 214, 107, 107, 107, 214, 214, 214, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 214, 214, 214, 107, 214, 107, 107, 107, 214, 214, 214, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 214, 214, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 214, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 857
};

const unsigned int nyanCat2Notes[] PROGMEM =
{
	NOTE_DS6, NOTE_E6, NOTE_FS6, NOTE_REST, NOTE_B6, NOTE_E6, NOTE_DS6, NOTE_E6, NOTE_FS6, NOTE_B6, NOTE_DS7, NOTE_E7, NOTE_DS7, NOTE_AS6, NOTE_B6, NOTE_REST, NOTE_FS6, NOTE_REST, NOTE_DS6, NOTE_E6, NOTE_FS6, NOTE_REST, NOTE_B6, NOTE_CS7, NOTE_AS6, NOTE_B6, NOTE_CS7, NOTE_E7, NOTE_DS7, NOTE_E7, NOTE_CS7, NOTE_FS5, NOTE_GS5, NOTE_C5, NOTE_DS5, NOTE_CS5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_FS5, NOTE_GS5, NOTE_DS5, NOTE_FS5, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_DS5, NOTE_FS5, NOTE_GS5, NOTE_DS5, NOTE_FS5, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_C5, NOTE_DS5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_FS5, NOTE_CS5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_FS5, NOTE_GS5, NOTE_C5, NOTE_DS5, NOTE_CS5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_FS5, NOTE_GS5, NOTE_DS5, NOTE_FS5, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_DS5, NOTE_FS5, NOTE_GS5, NOTE_DS5, NOTE_FS5, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_C5, NOTE_DS5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_D5, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_FS5, NOTE_CS5, NOTE_D5, NOTE_CS5, NOTE_B4, NOTE_CS5, NOTE_B4, NOTE_B4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_E5, NOTE_DS5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_FS4, NOTE_E5, NOTE_DS5, NOTE_CS5, NOTE_B4, NOTE_E4, NOTE_DS4, NOTE_E4, NOTE_FS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_FS4, NOTE_B4, NOTE_B4, NOTE_AS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_E5, NOTE_DS5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_AS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_E5, NOTE_DS5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_FS4, NOTE_E5, NOTE_DS5, NOTE_CS5, NOTE_B4, NOTE_E4, NOTE_DS4, NOTE_E4, NOTE_FS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_B4, NOTE_CS5, NOTE_DS5, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_FS4, NOTE_B4, NOTE_B4, NOTE_AS4, NOTE_B4, NOTE_FS4, NOTE_GS4, NOTE_B4, NOTE_E5, NOTE_DS5, NOTE_E5, NOTE_FS5, NOTE_B4, NOTE_CS5, NOTE_B4
};

const unsigned int nyanCat2Times[] PROGMEM =
{
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 107, 214, 107, 107, 107, 214, 214, 214, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 214, 214, 214, 107, 214, 107, 107, 107, 214, 214, 214, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 214, 214, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 214, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 214, 214, 857
};

const unsigned int nyanCatLength PROGMEM = sizeof(nyanCat1Notes) > sizeof(nyanCat2Notes) ? sizeof(nyanCat1Notes) / sizeof(unsigned int) : sizeof(nyanCat2Notes) / sizeof(unsigned int);

const struct Song nyanCatSong PROGMEM =
{
	nyanCat1Notes,
	nyanCat1Times,
	nyanCat2Notes,
	nyanCat2Times,
	nyanCatLength
};
#pragma endregion

const struct Song* songList[] =
{
	&eagleSong,
	&bachSong,
	&nyanCatSong,
	&undertaleSong
};

void setup()
{
	Serial.begin(9600);
	tone1.begin(9);
	tone2.begin(10);
	Serial.print("sizeof(int) = "); Serial.println(sizeof(int));
	Serial.print("sizeof(int*) = "); Serial.println(sizeof(int*));
	Serial.print("eagleLength = "); Serial.println(pgm_read_word(&(songList[0]->songLength)));
	Serial.print("bachLength = "); Serial.println(pgm_read_word(&(songList[1]->songLength)));
	Serial.print("nyanCatLength = "); Serial.println(pgm_read_word(&(songList[0]->songLength)));
	Serial.print("undertaleLength = "); Serial.println(pgm_read_word(&(songList[0]->songLength)));
	Serial.print("eagleLength = "); Serial.println(eagleLength);
	Serial.print("bachLength = "); Serial.println(bachLength);
	Serial.print("nyanCatLength = "); Serial.println(nyanCatLength);
	Serial.print("undertaleLength = "); Serial.println(undertaleLength);
}

void loop()
{
	byte i = 0;

	while (i < sizeof(songList) / sizeof(unsigned int))
	{
		waitForButtonPress(switchAPin);
		//Serial.print("Number of Songs = "); Serial.println(sizeof(songList) / sizeof(unsigned int));
		playSong(songList[i]);
		i++;
	}
}

void playSong(const struct Song* song)
{
	bool part1Exists = pgm_read_word(&(song->notes1)) && pgm_read_word(&(song->times1));
	bool part2Exists = pgm_read_word(&(song->notes2)) && pgm_read_word(&(song->times2));
	//Serial.print("Part 1 Exists = "); Serial.println(part1Exists);
	//Serial.print("Part 2 Exists = "); Serial.println(part2Exists);

	int i = -1;
	unsigned long t1 = 0;
	int j = -1;
	unsigned long t2 = 0;

	int noteLen = pgm_read_word(&(song->songLength));
	Serial.println(noteLen);
	unsigned long dt;
	unsigned long ti = millis();

	while (i < noteLen)
	{
		dt = millis();

		if (part1Exists && (dt >= t1 + ti))
		{
			tone1.stop();
			delay(5);
			i++;

			unsigned int curNote = pgm_read_word(pgm_read_word(&(song->notes1)) + i * sizeof(unsigned int));
			unsigned int curTime = pgm_read_word(pgm_read_word(&(song->times1)) + i * sizeof(unsigned int));

			//Serial.print("curNote = "); Serial.println(curNote);
			//Serial.print("curTime = "); Serial.println(curTime);
			t1 += curTime;
			tone1.play(curNote, curTime);
		}

		if (part2Exists && (dt >= t2 + ti))
		{
			tone2.stop();
			delay(5);
			j++;

			unsigned int curNote = pgm_read_word(pgm_read_word(&(song->notes2)) + j * sizeof(unsigned int));
			unsigned int curTime = pgm_read_word(pgm_read_word(&(song->times2)) + j * sizeof(unsigned int));

			t2 += curTime;
			tone2.play(curNote, curTime);
		}

		if (digitalRead(switchAPin) || digitalRead(switchBPin))
		{
			tone1.stop();
			tone2.stop();
			return;
		}
	}
	Serial.println("Done");
	tone1.stop();
	tone2.stop();
}

void waitForButtonPress(byte buttonPin)
{
	while (digitalRead(buttonPin)) {};
	while (!digitalRead(buttonPin)) {};
	while (digitalRead(buttonPin)) {};
}
